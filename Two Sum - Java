// - Runtime Efficient Solution
class Solution {
    public int[] twoSum(int[] nums, int target) {
        HashMap<Integer,Integer> num_map  = new HashMap<>();

        for (int i = 0; i<nums.length; i++){

            int diff = target - nums[i];

            if (num_map.containsKey(diff)){
                return new int[]{i, num_map.get(diff)};
            }

            num_map.put(nums[i],  i);
        }      
        return null;
    }
}

// - Memory Efficient Solution
class Solution {
    public int[] twoSum(int[] nums, int target) {

           for (int i=0; i<nums.length-1; i++){

                int j = i+1;

                while (j < nums.length){

                    if (nums[i] + nums[j] == target){
                        return new int[]{i,j};
                    }

                    j += 1;
                }
           } 
        return null;
    }
}


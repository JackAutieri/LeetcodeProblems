'''
You are given a 0-indexed string array words.

Let's define a boolean function isPrefixAndSuffix that takes two strings, str1 and str2:

- isPrefixAndSuffix(str1, str2) returns true if str1 is both a prefix and a suffix
  of str2, and false otherwise.

For example, isPrefixAndSuffix("aba", "ababa") is true because "aba" is a prefix of 
"ababa" and also a suffix, but isPrefixAndSuffix("abc", "abcd") is false.

Return an integer denoting the number of index pairs (i, j) such that i < j, 
and isPrefixAndSuffix(words[i], words[j]) is true.
'''

class Solution:
    # Function to count the number of prefix-suffix pairs in the list of words
    def countPrefixSuffixPairs(self, words: List[str]) -> int:
        count = 0  # Initialize a counter to track the number of valid prefix-suffix pairs
        n = len(words)  # Get the total number of words in the list

        # Iterate over the words, comparing each pair of words
        for i in range(n-1):  # Loop through the list of words, except the last one
            j = i + 1  # Set j to be the next word after i
            while j < n:  # Continue checking pairs as long as j is within bounds
                # Check if words[i] is both a prefix and suffix of words[j]
                if self.isPrefixAndSuffix(words[i], words[j]):
                    count += 1  # If the condition is met, increment the count
                j += 1  # Move to the next word for comparison
        return count  # Return the total number of prefix-suffix pairs found

    # Helper function to check if str1 is both a prefix and a suffix of str2
    def isPrefixAndSuffix(self, str1, str2):
        # Check if str2 starts and ends with str1
        if str2.startswith(str1) and str2.endswith(str1):
            return True  # Return True if str1 is a prefix and suffix of str2
        else:
            return False  # Return False if the condition is not met
